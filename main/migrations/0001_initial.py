# Generated by Django 5.2.6 on 2025-09-13 17:14

import django.db.models.deletion
import main.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Literature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=500)),
                ('authors', models.CharField(blank=True, max_length=1000)),
                ('journal_or_publisher', models.CharField(blank=True, max_length=255)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('published_date', models.DateField(blank=True, null=True)),
                ('doi', models.CharField(blank=True, max_length=255)),
                ('arxiv_id', models.CharField(blank=True, max_length=50)),
                ('url', models.URLField(blank=True)),
                ('source_type', models.CharField(choices=[('arxiv', 'arXiv'), ('doi', 'DOI'), ('url', 'URL'), ('upload', 'Uploaded PDF'), ('book', 'Book')], default='url', max_length=20)),
                ('pdf', models.FileField(blank=True, null=True, upload_to=main.models.literature_upload_path)),
                ('abstract', models.TextField(blank=True)),
                ('full_text', models.TextField(blank=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('is_open_access', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('abstract', models.TextField(blank=True)),
                ('content_raw', models.TextField(blank=True)),
                ('content_format', models.CharField(choices=[('md', 'Markdown'), ('tex', 'LaTeX'), ('mixed', 'Mixed')], default='md', max_length=10)),
                ('metadata', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField()),
                ('kind', models.CharField(choices=[('image', 'Image'), ('table', 'Table'), ('text', 'Text'), ('json', 'JSON'), ('archive', 'Archive'), ('other', 'Other')], default='other', max_length=20)),
                ('label', models.CharField(blank=True, max_length=200)),
                ('mime_type', models.CharField(blank=True, max_length=100)),
                ('file', models.FileField(blank=True, null=True, upload_to=main.models.attachment_upload_path)),
                ('text_content', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaperSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(max_length=200)),
                ('kind', models.CharField(choices=[('abstract', 'Abstract'), ('introduction', 'Introduction'), ('methods', 'Methods'), ('results', 'Results'), ('discussion', 'Discussion'), ('conclusion', 'Conclusion'), ('acknowledgments', 'Acknowledgments'), ('references', 'References'), ('custom', 'Custom')], default='custom', max_length=32)),
                ('content', models.TextField(blank=True)),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='main.paper')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('abstract', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('archived', 'Archived')], default='active', max_length=20)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='paper',
            name='project',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paper', to='main.project'),
        ),
        migrations.CreateModel(
            name='Hypothesis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('statement', models.TextField()),
                ('status', models.CharField(choices=[('proposed', 'Proposed'), ('supported', 'Supported'), ('rejected', 'Rejected'), ('inconclusive', 'Inconclusive')], default='proposed', max_length=20)),
                ('confidence', models.DecimalField(blank=True, decimal_places=3, help_text='0.000â€“1.000 subjective confidence', max_digits=4, null=True)),
                ('p_value', models.DecimalField(blank=True, decimal_places=5, max_digits=6, null=True)),
                ('evaluation_summary', models.TextField(blank=True)),
                ('references', models.ManyToManyField(blank=True, related_name='hypotheses', to='main.literature')),
                ('paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hypotheses', to='main.paper')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hypotheses', to='main.project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('code', models.TextField(help_text='Executable code snippet for the simulation')),
                ('language', models.CharField(choices=[('python', 'Python'), ('r', 'R'), ('julia', 'Julia')], default='python', max_length=20)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failed', 'Failed')], default='draft', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('exit_code', models.IntegerField(blank=True, null=True)),
                ('stdout', models.TextField(blank=True)),
                ('stderr', models.TextField(blank=True)),
                ('result_json', models.JSONField(blank=True, null=True)),
                ('hypothesis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='simulations', to='main.hypothesis')),
                ('paper', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='simulations', to='main.paper')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to='main.project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Citation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('locator', models.CharField(blank=True, help_text='Page(s) or section locator, e.g., p. 12â€“14', max_length=100)),
                ('quote', models.TextField(blank=True)),
                ('note', models.TextField(blank=True)),
                ('style', models.CharField(choices=[('apa', 'APA'), ('mla', 'MLA'), ('chicago', 'Chicago'), ('ieee', 'IEEE'), ('other', 'Other')], default='other', max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('literature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citations', to='main.literature')),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citations', to='main.paper')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citations', to='main.papersection')),
            ],
            options={
                'ordering': ['order', 'id'],
                'unique_together': {('paper', 'literature', 'section', 'order')},
            },
        ),
    ]
